version: "3.8"
services:
  lambda:
    container_name: lambda
    build: 
      context: ./ 
      dockerfile: ./Dockerfile
    #command: lambda_function.handler
    env_file:
      - .env/.venv
    ports:
      # - 9000:8080 original
      - 9090:8080
    volumes:
      - .:/var/task # SHOULD NOT
      - $HOME/.aws/:/root/.aws:ro    
    environment:
    # prd aws secrects
    #   - AWS_ACCESS_KEY_ID
    #   - AWS_SECRET_ACCESS_KEY
    #   - LASTFM_API_KEY
      - ENV=dev   
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123   
      - MINIO_ENDPOINT=http://minio:9000  
      - POSTGRES_DB=pyiceberg_catalog
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SERVER=postgres
    networks:
      - trino-network
  trino:
    container_name: trino
    image: 'trinodb/trino:latest'
    hostname: trino
    ports:
      - '8080:8080'
    volumes:
      # - <host_directory>:<container_directory>:<access_mode>
      - ./trino/etc:/etc/trino
      - ./lastfm-warehouse:/lastfm-warehouse
    networks:
      - trino-network
  postgres:
    container_name: postgres
    image: postgres:14.1-alpine
    #restart: always
    environment:
      - POSTGRES_DB=postgres_catalog
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ROOT_PASSWORD=root
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      # - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - trino-network
  minio:
    container_name: minio
    image: minio/minio
    ports:
    - 9000:9000 # CLI
    - 9001:9001 # Web 
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      #- /path/to/data:/data
      - ./:/buckets
    command: server /buckets --console-address ":9001"
    networks:
      - trino-network
# airflow
# streamlit
volumes:
  app:
    driver: local
networks:
  trino-network:
    driver: bridge
# secrets
secrets:
   db_password:
     file: db_password.txt
   db_root_password:
     file: db_root_password.txt
